name: Retrieve Kubernetes OpenAPI Spec

on:
  workflow_dispatch:
    inputs:
      k8s_version:
        description: "Kubernetes version to retrieve the OpenAPI spec for"
        required: true
        default: "v1.28.0"

jobs:
  retrieve-openapi:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

     # Step 1: Start etcd
      - name: Start etcd
        run: |
          docker run -d --name etcd --network=host -e ALLOW_NONE_AUTHENTICATION=yes bitnami/etcd:3.5.9
      
      # Step 2: Verify etcd health
      - name: Verify etcd health
        run: |
          for i in {1..10}; do
            if curl -sf http://127.0.0.1:2379/health > /dev/null; then
              echo "etcd is healthy"
              break
            fi
            echo "Waiting for etcd..."
            sleep 2
          done
          if ! curl -sf http://127.0.0.1:2379/health > /dev/null; then
            echo "etcd failed to start"
            exit 1
          fi
      
      # Step 3: Generate service account keys
      - name: Generate service account keys
        run: |
          mkdir -p /tmp
          openssl genrsa -out /tmp/service-account.key 2048
          openssl rsa -in /tmp/service-account.key -pubout -out /tmp/service-account.pem
      
      # Step 4: Start kube-apiserver
      - name: Start kube-apiserver
        run: |
          docker run -d --name kube-apiserver --network=host \
            k8s.gcr.io/kube-apiserver:${{ github.event.inputs.k8s_version }} \
            --etcd-servers=http://127.0.0.1:2379 \
            --authorization-mode=Node,RBAC \
            --service-account-issuer=https://kubernetes.default.svc.cluster.local \
            --service-account-signing-key-file=/tmp/service-account.key \
            --service-account-key-file=/tmp/service-account.pem \
            --advertise-address=127.0.0.1 \
            --secure-port=6443
      
      # Step 5: Wait for kube-apiserver
      - name: Wait for kube-apiserver
        run: |
          for i in {1..30}; do
            if curl -sf http://127.0.0.1:6443/healthz > /dev/null; then
              echo "kube-apiserver is ready!"
              break
            fi
            echo "Waiting for kube-apiserver..."
            sleep 2
          done
          if ! curl -sf http://127.0.0.1:6443/healthz > /dev/null; then
            echo "kube-apiserver failed to start."
            exit 1
          fi
      
      # Step 6: Retrieve OpenAPI Spec
      - name: Retrieve OpenAPI Spec
        run: |
          curl -s http://127.0.0.1:6443/openapi/v2 > k8s-openapi-${{ github.event.inputs.k8s_version }}.json
      
      # Step 7: Debug kube-apiserver logs (on failure)
      - name: Debug kube-apiserver logs
        if: failure()
        run: docker logs kube-apiserver
