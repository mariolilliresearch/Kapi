name: Retrieve Kubernetes OpenAPI Spec using minikube

on:
  push:
    branches:
      - main # specify which branch you want to watch for changes
  workflow_dispatch:
    inputs:
      kubernetes_version:
        description: "Kubernetes Version"
        required: true
        default: "v1.29.0"
      go_version:
        description: "Go Version"
        required: true
        default: "go1.20.6"
  schedule:
    - cron: "0 0 * * *" # Runs every week at midnight (UTC)

jobs:
  build_and_run:
    runs-on: ubuntu-22.04

    steps:
      # Step 1: Check out the repository
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: main # Specify branch/tag here, e.g., 'main', or a specific tag like 'v1.0.0'

      # Step 2: Install Go
      - name: Install Go
        env:
          GO_VERSION: ${{ github.event.inputs.go_version }}
        run: |
          wget https://golang.org/dl/${GO_VERSION}.linux-amd64.tar.gz
          sudo tar -C /usr/local -xvzf ${GO_VERSION}.linux-amd64.tar.gz
          echo "export PATH=$PATH:/usr/local/go/bin" >> $GITHUB_ENV
          source $GITHUB_ENV
          echo "Go installed."

      # Step 3: Clone cri-dockerd repository
      - name: Clone cri-dockerd repository
        run: git clone https://github.com/Mirantis/cri-dockerd.git

      # Step 4: Build cri-dockerd from source
      - name: Build cri-dockerd
        run: |
          cd cri-dockerd
          mkdir bin
          go get && go build -o bin/cri-dockerd
          sudo mkdir -p /usr/local/bin
          sudo install -o root -g root -m 0755 bin/cri-dockerd /usr/local/bin/cri-dockerd
          echo "cri-dockerd built successfully."

      # Step 5: Set up systemd for cri-dockerd
      - name: Set up systemd for cri-dockerd
        run: |
          sudo cp -a cri-dockerd/packaging/systemd/* /etc/systemd/system
          sudo sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
          sudo systemctl daemon-reload
          sudo systemctl enable cri-docker.service
          sudo systemctl enable --now cri-docker.socket
          echo "cri-dockerd systemd configuration set."

      # Step 6: Install Docker and containerd
      - name: Install Docker and containerd
        run: |
          # Remove any conflicting 'containerd' package
          sudo apt-get remove containerd.io
          sudo apt install docker.io docker-compose -y

          # Clean up residual packages
          sudo apt autoremove -y

          echo "Docker and Containerd installed."

      # Step 7: Start minikube with the specified Kubernetes version
      - name: Start Minikube
        env:
          KUBERNETES_VERSION: ${{ github.event.inputs.kubernetes_version }}
        run: |
          sudo apt update && sudo apt install curl -y
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

          # Start Minikube with the specified Kubernetes version
          minikube start --kubernetes-version=${KUBERNETES_VERSION} --driver=docker

      # Step 8: Retrieve OpenAPI spec from the cluster
      - name: Get OpenAPI Spec
        env:
          KUBERNETES_VERSION: ${{ github.event.inputs.kubernetes_version }}
        run: |
          kubectl get --raw=/openapi/v2 > k8s-openapi-${KUBERNETES_VERSION}.json

      # Step 9: Create a folder named after the Kubernetes version
      - name: Create Versioned Directory and Move File
        env:
          KUBERNETES_VERSION: ${{ github.event.inputs.kubernetes_version }}
        run: |
          mkdir -p ${KUBERNETES_VERSION}
          mv k8s-openapi-${KUBERNETES_VERSION}.json ${KUBERNETES_VERSION}/

      # Step 10: Commit and Push the Changes
      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KUBERNETES_VERSION: ${{ github.event.inputs.kubernetes_version }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ${KUBERNETES_VERSION}/
          git commit -m "Add OpenAPI spec for Kubernetes version ${KUBERNETES_VERSION}"
          git push
